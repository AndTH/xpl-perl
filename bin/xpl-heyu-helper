#!/usr/bin/perl -w

=head1 NAME

xpl-heyu-helper - Perl script for an xPL X10 application

=head1 SYNOPSIS

  xpl-heyu-helper [flags]
  where valid flags are:
    -h - show this help text
    -v - verbose mode

  # start the heyu helper
  echo -e '1\0turn\0a1\0on' | xpl-heyu-helper |sed -e's/\0/ /g;'

=head1 DESCRIPTION

This script is wrapper script that reads heyu command lines from stdin
and outputs acknowledgements on stdout.  The command lines are encoded
using the byte zero, C<\0>, as a separator and are prefixed by a
sequence number.  Responses are prefixed by the requests sequence
number, the return code of the heyu command and optionally followed by
an error message.  These items are again separated by zero bytes.

For example, it might accept:

  1\0turn\0al\0on

and return:

  1\00


=cut

use strict;
use warnings;
use Getopt::Long;
use Pod::Usage;
$|=1; # autoflush - essential here

my %opt = ();
my $verbose;
my $help;
my $man;
GetOptions('verbose+' => \$verbose,
           'help|?|h' => \$help,
           'man' => \$man,
          ) or pod2usage(2);
pod2usage(1) if ($help);
pod2usage(-exitstatus => 0, -verbose => 2) if ($man);

my $chr0 = chr(0);

while (<>) {
  chomp;
  my ($seq, @args) = split $chr0;
  print STDERR "$seq < @args\n" if ($verbose);
  my $rc = system('heyu', @args);
  my @res = ();
  push @res, $chr0, $? == -1 ? $! : $? if ($rc != 0);
  print STDERR "$seq > $rc @res\n" if ($verbose);
  print $seq, $chr0, $rc, @res, "\n";
}

=head1 SEE ALSO

xPL::Client(3), xPL::Listener(3), heyu(1), xpl-x10(1)

Project website: http://www.xpl-perl.org.uk/

=head1 AUTHOR

Mark Hindess, E<lt>soft-xpl-perl@temporalanomaly.comE<gt>

=head1 COPYRIGHT

Copyright (C) 2007, 2008 by Mark Hindess

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.7 or,
at your option, any later version of Perl 5 you may have available.

=cut

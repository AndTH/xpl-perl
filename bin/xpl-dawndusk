#!/usr/bin/perl -w

# $Id$

=head1 NAME

xpl-dawndusk - Perl script for an xPL dawndusk application

=head1 SYNOPSIS

  # show usage message
  xpl-dawndusk -h

  # start the dawndusk application listening and broadcasting on first
  # ethernet interface in verbose mode
  xpl-dawndusk -i eth0 -v

=head1 DESCRIPTION

This script is an xPL client that implements the dawn/dusk schema.
Currently, it only implements sending of dawn and dusk 'xpl-trig'
messages.  Support for 'dawndusk.request' message for 'daynight'
will be implemented shortly.

This script requires the DateTime::Event::Sunrise perl module.

=cut

use strict;
use warnings;
use Getopt::Std;
use xPL::Client;
$|=1; # autoflush helps debugging

sub HELP_MESSAGE {
  my $msg = shift || q{};
  die
qq{Usage: $0 [flags] [options] latitude longitude
where valid flags are:
  -h - show this help text
  -v - verbose mode
and valid options are (default shown in brackets):
  -i if0 - the inferface for xPL messages (first non-loopback or loopback)
$msg
};
}

my %opt = ();
getopts('hvi:', \%opt);
if (exists $opt{'h'}) { HELP_MESSAGE() }

my %args =
  (
   vendor_id => "bnz",
   device_id => "dawndusk",
  );
if (exists $opt{'i'}) {
  $args{interface} = $opt{'i'};
}
if (exists $opt{'v'}) {
  $args{verbose} = $opt{'v'};
}

my $latitude = shift  || 51;
my $longitude = shift || -1;
my $state = "day";

# Create an xPL Client object
my $xpl = xPL::Client->new(%args) or die "Failed to create xPL::Client\n";

# set up each new day at midnight
$xpl->add_timer(id => 'dawn',
                timeout => "sunrise latitude=$latitude longitude=$longitude",
                callback => sub { dawn(); 1; });

$xpl->add_timer(id => 'dusk',
                timeout => "sunset latitude=$latitude longitude=$longitude",
                callback => sub { dusk(); 1; });

$state = $xpl->timer_next('dusk') < $xpl->timer_next('dawn') ? "day" : "night";

# Run the main loop
$xpl->main_loop();

exit;

sub send_dawndusk {
  my $status = shift;
  return $xpl->send(message_type => 'xpl-trig',
                    class => 'dawndusk.basic',
                    body => { type => 'dawndusk', status => $status },
                   );
}

sub dawn {
  $state = "day";
  print "Dawn\n" if ($opt{'v'});
  send_dawndusk('dawn');
  return 1;
}

sub dusk {
  $state = "night";
  print "Dusk\n" if ($opt{'v'});
  send_dawndusk('dusk');
  return 1;
}

=head1 SEE ALSO

xPL::Client(3), xPL::Listener(3), DateTime::Event::Sunrise(3)

Project website: http://www.xpl-perl.org.uk/

=head1 AUTHOR

Mark Hindess, E<lt>xpl-perl@beanz.uklinux.netE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2005 by Mark Hindess

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.7 or,
at your option, any later version of Perl 5 you may have available.

=cut

#!/bin/sh

# Copyright (C) 2007 by Mark Hindess
#
# Script to set up xPL Perl clients.
# Usage:
# 

if [ "$1" == "-h" -o "$1" == "--h" -o \
     "$1" == "--help" -o "$1" == "-help" ]; then
    cat 1>&2 <<EOF 

Usage: $0 [directory-for-config] [directory-for-services]

The default is to store configuration files under /etc/xplperl
and to store the daemontools/runit service directories under
/var/service.  Obviously, this script relies on either runit or
daemontools being installed.  On a Debian system either:

  apt-get install runit

or:

  apt-get install daemontools-installer
  build-daemontools



This script will attempt to set up a group 'xplperl' and two users
'xplperl' and 'xplperllog'.  Then script will try to install:

  xpl-hub - an xPL Hub is always required and it will be configured if
    there is not already a program listening on udp port 3865.

  xpl-rrd - a client to store sensor data in /var/lib/rrd

  a cronjob (/etc/cron.d/xpl-rrd) to create graphs, in /var/www/rrd,
    from the files produced by the xpl-rrd client

  xpl-x10 - if heyu appears to be configured.  (The script looks for
    the presence of the heyu configuration directory /etc/heyu.)

  xpl-dawndusk - if the Perl module DateTime::Event::Sunrise is installed

  xpl-owfs - if a one-wire filesystem (owfs) is mounted as /ow.  If a
    one-wire filesystem is mounted on another mountpoint, then set
    the environment variable XPL_OWFS to the mountpoint and re-run the script.

  xpl-rfxcom - if the environment variable XPL_RFXCOM_TTY is defined with
    the name of the tty device that an RFXCOM receiver is attached to.

  xpl-viom - if the environment variable XPL_VIOM_TTY is defined with
    the name of the tty device that a VIOM IO controller is attached to.

  xpl-w800 - if the environment variable XPL_W800_TTY is defined with
    the name of the tty device that an W800 receiver is attached to.

EOF
    exit 1
fi 


ETC=${1:-/etc/xplperl}
SVDIR=${2:-/var/service}

if [ -z "$XPL_OWFS" ]; then
    XPL_OWFS=/ow
fi

if [ "`id -u`" != "0" ]; then
    echo $0: must be run as root 2>&1
    exit 1
fi

if test \! -e /var/www ; then
    echo xpl-rdd-graphs requires a web server.
    echo perhaps "apt-get install lighttpd"
    exit 1
fi

if test \! -e $SVDIR ; then
    SVDIR=/service
    if test \! -e $SVDIR ; then
        SVDIR=/var/lib/svscan
        if test \! -e $SVDIR ; then
            echo $0: requires a runit/daemontools service directory
            echo perhaps you need to install either runit or daemontools
            echo "See the usage (\"$0 -h\") for more details."
            exit
        fi
    fi
fi

make_dir() {
    mdir=$1
    owner=${2:-root:root}
    if test \! -d $mdir ; then
        mkdir $mdir
        chmod 0755 $mdir
        chown $owner $mdir
    fi
}

make_service_aux() {
    dir=$1
    prog=$2
    user=${3:-xplperl:xplperl}
    make_dir $ETC/service/$dir
    if test -f $ETC/service/$dir/run ; then
        echo $ETC/service/$dir/run already exists
    else
        cat >$ETC/service/$dir/run <<EOF
#!/bin/sh
exec 2>&1
exec chpst -u${user} ${prog}
EOF
        chmod 0755 $ETC/service/$dir/run
    fi
}

link_service() {
    name=$1
    if test -e $SVDIR/$name ; then
        echo $SVDIR/$name already exists
    else
        ln -s $ETC/service/$name $SVDIR/$name
    fi
}
    
make_service() {
    name=$1
    prog=$2
    user=$3
    make_dir $ETC/service
    make_service_aux $name "$prog" $user
    make_service_aux $name/log "svlogd -tt ./main" \
        xplperllog:xplperl
    if test -f $ETC/service/$name/log/config ; then
        echo $ETC/service/$name/log/config already exists
    else
        cat >$ETC/service/$name/log/config <<EOF
# Files should be 1M before being rotated
s1000000
# keep 1000 log files
n1000
# rotate at least once per day
t86400
EOF
        chmod 0644 $ETC/service/$name/log/config
    fi
    make_dir $ETC/service/$name/log/main xplperllog:xplperl
}


# main

if grep -q '^xplperl:' /etc/group ; then
    echo group 'xplperl' already exists
else
    addgroup --system xplperl
fi

if id xplperl >/dev/null 2>&1 ; then
    echo user 'xplperl' already exists
else
    adduser --system --home $ETC --shell /bin/sh --no-create-home \
        --gecos 'xPL Perl' --disabled-login --disabled-password \
        --ingroup xplperl xplperl
fi

if id xplperllog >/dev/null 2>&1 ; then
    echo user 'xplperllog' already exists
else
    adduser --system --home $ETC --shell /bin/sh --no-create-home \
        --gecos 'xPL Perl Logs' --disabled-login --disabled-password \
        --ingroup xplperl xplperllog
fi

make_dir $ETC

if test -f $ETC/devices.txt ; then
    echo $ETC/devices.txt already exists
else
    cat >$ETC/devices.txt <<EOF
# mappings (one-per line) of device names to "friendly" names
# for instance, some rfxcom sensors:
#
#electrisave.44=mains
#uv138.4f=outside
#rtgr328n.4a=outside
#
# or some x10 devices:
#
#a1=doorbell
#
# or a one-wire sensor temperature sensor:
#
#28.84919B000000=node_0

EOF
fi

if netstat -na|grep -q '^udp.*:3865' ; then
    echo There appears to already be something listening on udp port 3865.
    echo Not configuring the xpl-hub service.
else
    echo Setting up xpl-hub service
    make_service xpl-hub "/usr/bin/xpl-hub -v"
    link_service xpl-hub
fi
    echo

echo Setting up xpl-rrd service
make_dir /var/lib/rrd xplperl:xplperl
make_service xpl-rrd "/usr/bin/xpl-rrd -v -x $ETC/devices.txt /var/lib/rrd"
link_service xpl-rrd
make_dir /var/www/rrd xplperl:xplperl
echo

echo Setting up xpl-rrd crontab
if test -e /etc/cron.d/xpl-rrd ; then
    echo /etc/cron.d/xpl-rrd already exists
else
    echo /etc/cron.d/xpl-rrd created
    cat >/etc/cron.d/xpl-rrd <<EOF
7,12,17,22,27,32,37,42,47,52,57 * * * * xplperl /usr/bin/xpl-rrd-graphs 1h >/dev/null
2 * * * * xplperl /usr/bin/xpl-rrd-graphs >/dev/null
EOF
    chmod a+rx /etc/cron.d/xpl-rrd
fi
echo

if test -e /etc/heyu ; then
    echo /etc/heyu exists will configure xpl-x10
    make_service xpl-x10 "/usr/bin/xpl-x10 -v"
    link_service xpl-x10
else
    echo heyu not install not setting up xpl-x10
fi
echo

if perl -e 'use DateTime::Event::Sunrise;' 2>/dev/null ; then
    echo DateTime::Event::Sunrise available, installing xpl-dawndusk service
    make_service xpl-dawndusk "/usr/bin/xpl-dawndusk -v"
    link_service xpl-dawndusk
else
    echo DateTime::Event::Sunrise not available, not configuring xpl-dawndusk
fi
echo
    
if test -e $XPL_OWFS && \
  test -e $XPL_OWFS/settings && \
  test -e $XPL_OWFS/uncached ; then
    echo found $XPL_OWFS setting up xpl-owfs for 1-wire filesystem
    make_service xpl-owfs "/usr/bin/xpl-owfs -v $XPL_OWFS"
    link_service xpl-owfs
else
    echo 1-wire filesystem, $XPL_OWFS, not available, not configuring xpl-owfs
    echo set XPL_OWFS environment variable to mount point if it is not /ow
fi
echo

if test -n "$XPL_RFXCOM_TTY" ;then
    echo Setting up xpl-rfxcom using $XPL_RFXCOM_TTY
    make_service xpl-rfxcom "/usr/bin/xpl-rfxcom -v $XPL_RFXCOM_TTY"
    link_service xpl-rfxcom
else
    echo XPL_RFXCOM_TTY not defined, not configuring xpl-rfxcom
fi
echo

if test -n "$XPL_VIOM_TTY" ;then
    echo Setting up xpl-viom using $XPL_VIOM_TTY
    make_service xpl-viom "/usr/bin/xpl-viom -v $XPL_VIOM_TTY"
    link_service xpl-viom
else
    echo XPL_VIOM_TTY not defined, not configuring xpl-viom
fi
echo

if test -n "$XPL_W800_TTY" ;then
    echo Setting up xpl-w800 using $XPL_W800_TTY
    make_service xpl-w800 "/usr/bin/xpl-w800 -v $XPL_W800_TTY"
    link_service xpl-w800
else
    echo XPL_W800_TTY not defined, not configuring xpl-w800
fi
echo

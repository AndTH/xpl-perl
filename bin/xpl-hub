#!/usr/bin/perl -w

=head1 NAME

xpl-hub - Perl script for an xPL hub application

=head1 SYNOPSIS

  xpl-hub [flags] [options]
  where valid flags are:
    -h - show this help text
    -v - verbose mode
  and valid options are (default shown in brackets):
    -i if0 - the interface for xPL messages (first non-loopback or loopback)

  # start the hub listening and broadcasting on first Ethernet
  # interface in verbose mode
  xpl-hub -i eth0 -v

=head1 DESCRIPTION

This script is an simple xPL hub that routes incoming xPL messages to
local clients.

=cut

use strict;
use warnings;
use Getopt::Long;
use Pod::Usage;
use Socket;
use xPL::Hub;
$|=1; # autoflush helps debugging

my %args = ( vendor_id => 'bnz', device_id => 'hub', );
my %opt = ();
my $verbose;
my $interface;
my $help;
my $man;
GetOptions('verbose+' => \$verbose,
           'interface=s' => \$interface,
           'define=s' => \%opt,
           'help|?|h' => \$help,
           'man' => \$man,
          ) or pod2usage(2);
pod2usage(1) if ($help);
pod2usage(-exitstatus => 0, -verbose => 2) if ($man);

$args{'interface'} = $interface if ($interface);
$args{'verbose'} = $verbose if ($verbose);

# Create an xPL Hub object
my $xpl = xPL::Hub->new(%args, %opt) or die "Failed to create xPL::Hub\n";

sub sigusr1 {
  foreach my $client ($xpl->clients) {
    print STDERR $xpl->client_info($client),"\n";
  }
}

$SIG{USR1} = \&sigusr1;

# Run the main loop
$xpl->main_loop();

=head1 SEE ALSO

xPL::Hub(3), xPL::Listener(3)

Project website: http://www.xpl-perl.org.uk/

Hub Spec.: http://xplproject.org.uk/wiki/index.php?title=XPL_hubs_specification

=head1 AUTHOR

Mark Hindess, E<lt>soft-xpl-perl@temporalanomaly.comE<gt>

=head1 COPYRIGHT

Copyright (C) 2005, 2008 by Mark Hindess

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.7 or,
at your option, any later version of Perl 5 you may have available.

=cut
